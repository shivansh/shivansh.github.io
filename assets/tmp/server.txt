#include <sys/socket.h>
#include <arpa/inet.h>
#include <string.h>

#include <iostream>
#include <string>

#include "ff_api.h"

int main(int argc, char **argv) {
    char buffer[1024];
    int listen_sock, conn_sock;
    struct sockaddr_in server_addr;
    struct sockaddr_storage server_storage;
    socklen_t addr_size;

    ff_init(argc, argv);
    if (argc != 2) {
	std::cerr << "Usage: ./server_exe <PORT>\n";
	return EXIT_FAILURE;
    }

    listen_sock = ff_socket(PF_INET, SOCK_STREAM, 0);
    server_addr.sin_family = AF_INET;
    server_addr.sin_port = htons(std::stoi(argv[1]));
    server_addr.sin_addr.s_addr = inet_addr("127.0.0.1");
    memset(server_addr.sin_zero, '\0', sizeof(server_addr.sin_zero));

    ff_bind(listen_sock, (struct linux_sockaddr *) &server_addr, sizeof(server_addr));
    if (ff_listen(listen_sock, 4) == 0)
    	std::cout << "Listening for connections...\n";
    else {
	perror("listen");
    	return EXIT_FAILURE;
    }

    addr_size = sizeof(server_storage);
    conn_sock = ff_accept(listen_sock,
			 (struct linux_sockaddr *)&server_storage,
			 &addr_size);
    snprintf(buffer, 11, "%s", "Hello world");
    ff_send(conn_sock, buffer, strlen(buffer), 0);

    return EXIT_SUCCESS;
}
